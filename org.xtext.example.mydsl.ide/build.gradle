apply plugin: 'application'
apply plugin: 'maven'

group = "de.btu.sst.swt.xtextLsp"

dependencies {
	compile project(':org.xtext.example.mydsl')
	compile "org.eclipse.xtext:org.eclipse.xtext.ide:${xtextVersion}"
	compile "org.eclipse.xtext:org.eclipse.xtext.xbase.ide:${xtextVersion}"
	compile "org.slf4j:slf4j-api:1.7.22"
	compile "org.slf4j:slf4j-simple:1.6.1"

	compile "org.eclipse.sprotty:org.eclipse.sprotty.server:${sprottyVersion}"
	compile "org.eclipse.sprotty:org.eclipse.sprotty.xtext:${sprottyVersion}"

	compile "org.eclipse.sprotty:org.eclipse.sprotty.layout:${sprottyVersion}"
	compile "org.eclipse.elk:org.eclipse.elk.alg.layered:${elkVersion}"

	// For managing references on EObjects, which concrete type is not known.
	compile 'commons-beanutils:commons-beanutils:1.9.4'
}

// Add a start script for the socket case
mainClassName = 'org.xtext.example.mydsl.ide.diagram.launch.GraphicalServerLauncher'

startScripts {
	applicationName = 'mydsl-socket'
}

// Add another start script for the standalone / self-contained case
task standaloneStartScript(type: CreateStartScripts) {
	mainClassName = 'org.xtext.example.mydsl.ide.diagram.launch.GraphicalServerLauncher'
	applicationName = 'mydsl-socket'
	outputDir = new File(project.buildDir, 'scripts')
	classpath = jar.outputs.files + project.configurations.runtime
}

applicationDistribution.into("bin") {
	from(standaloneStartScript)
	fileMode = 0755
}

jar {
	baseName = rootProject.name
}
